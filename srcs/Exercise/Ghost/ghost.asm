org 100h
 
%define SPRITEW dw 8
section .data


xPos dw 0 
xVelocity dw 1 

spritew dw 8


blinky db 0x00, 0x00, 0x28, 0x28, 0x28, 0x28, 0x00, 0x00
        db 0x00, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x00
        db 0x28, 0x28, 0x0f, 0x00, 0x28, 0x0f, 0x00, 0x28
        db 0x28, 0x28, 0x0f, 0x0f, 0x28, 0x0f, 0x0f, 0x28
        db 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28
        db 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28
        db 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28
        db 0x28, 0x00, 0x28, 0x28, 0x00, 0x28, 0x28, 0x28

inky db 0x00, 0x00, 0x34, 0x34, 0x34, 0x34, 0x00, 0x00
        db 0x00, 0x34, 0x34, 0x34, 0x34, 0x34, 0x34, 0x00
        db 0x34, 0x34, 0x0f, 0x00, 0x34, 0x0f, 0x00, 0x34
        db 0x34, 0x34, 0x0f, 0x0f, 0x34, 0x0f, 0x0f, 0x34
        db 0x34, 0x34, 0x34, 0x34, 0x34, 0x34, 0x34, 0x34
        db 0x34, 0x34, 0x34, 0x34, 0x34, 0x34, 0x34, 0x34
        db 0x34, 0x34, 0x34, 0x34, 0x34, 0x34, 0x34, 0x34
        db 0x34, 0x00, 0x34, 0x34, 0x00, 0x34, 0x34, 0x34

clyde db 0x00, 0x00, 0x42, 0x42, 0x42, 0x42, 0x00, 0x00
        db 0x00, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x00
        db 0x42, 0x42, 0x0f, 0x00, 0x42, 0x0f, 0x00, 0x42
        db 0x42, 0x42, 0x0f, 0x0f, 0x42, 0x0f, 0x0f, 0x42
        db 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42
        db 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42
        db 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42
        db 0x42, 0x00, 0x42, 0x42, 0x00, 0x42, 0x42, 0x42

pinky db 0x00, 0x00, 0x54, 0x54, 0x54, 0x54, 0x00, 0x00
        db 0x00, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x00
        db 0x54, 0x54, 0x0f, 0x00, 0x54, 0x0f, 0x00, 0x54
        db 0x54, 0x54, 0x0f, 0x0f, 0x54, 0x0f, 0x0f, 0x54
        db 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54
        db 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54
        db 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54
        db 0x54, 0x00, 0x54, 0x54, 0x00, 0x54, 0x54, 0x54

 

 
section .text
 
   mov ah, 00h ; set video mode requirement
   mov al, 13h ; set video mode option o 320 x 200 256 colors
   int 10h

   gameloop:
   mov al, 0FFh
   call clearScreen
   ;call printSprite
   ; call the
    mov si, blinky
    mov di, [xPos]
   call draw_ghost

   ; this loop is to slow down the game
    mov cx, 20000
   waitloop:
    loop waitloop
    mov ax, [xPos]
    add ax, [xVelocity]
    mov [xPos], ax

   jmp gameloop

   ; mov si, inky
;     mov di, 8
;    call draw_ghost

;     mov si, pinky
;     mov di, 16
;    call draw_ghost

;     mov si, clyde
;     mov di, 24
;    call draw_ghost
;reset the keyboard buffer and then wait for a keypress :
   mov ax, 0C01h ;
   int 21h
 
;dos box default video mode
   mov ax, 03h
   int 21h
 
   int 20h ;quit
;the_functions:

 

; need to set the color of filling in al

 clearScreen:
   mov ax, 0xA000
   mov es, ax
   mov di, 0
   mov cx, 200*320
   rep stosb
   ret

; si most have the sprite adress
; di most have the target adress
draw_ghost:
    mov ax, 0xA000
    mov es, ax
    mov dx, 8
    .eachLine:
        mov cx, 8
        rep movsb
        add di, 320-8
        dec dx
        jnz .eachLine
        ret